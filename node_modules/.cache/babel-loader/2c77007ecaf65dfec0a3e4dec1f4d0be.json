{"ast":null,"code":"var _jsxFileName = \"D:\\\\volvo\\\\volvo_cars\\\\src\\\\Components\\\\CarsList\\\\CarsList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CarsData from \"../../api/cars.json\";\nimport Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport CarListItem from \"../CarListItem/CarListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CarsList = () => {\n  _s();\n\n  const [data, setData] = useState([]); // store data\n\n  const [showDots, setShowDots] = useState(false); // hide dots for large screen\n\n  useEffect(() => {\n    setData(CarsData);\n  }, []); //responsive breakpoints for plugin\n\n  const responsive = {\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 4,\n      slidesToSlide: 1 // optional, default to 1.\n\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2,\n      slidesToSlide: 1,\n      // optional, default to 1.\n      partialVisibilityGutter: 30\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1,\n      slidesToSlide: 1,\n      // optional, default to 1.\n      partialVisibilityGutter: 30\n    }\n  };\n\n  const layoutResize = () => {\n    // on window resize show dots only for small screen\n    if (window.innerWidth > 1024) setShowDots(false);else setShowDots(true);\n  };\n\n  useEffect(() => {\n    layoutResize();\n    window.addEventListener(\"resize\", layoutResize);\n    return () => {\n      window.removeEventListener(\"resize\", layoutResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && data.length > 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n      swipeable: true,\n      draggable: true,\n      showDots: showDots,\n      responsive: responsive,\n      ssr: true // means to render carousel on server-side.\n      ,\n      infinite: false,\n      keyBoardControl: true,\n      customTransition: \"transform 300ms ease-in-out\",\n      transitionDuration: 1000,\n      containerClass: \"carousel-container\",\n      removeArrowOnDeviceType: [\"tablet\", \"mobile\"],\n      dotListClass: \"custom-dot-list-style\",\n      itemClass: \"carousel-item-padding-40-px\",\n      partialVisible: true,\n      children: data.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(CarListItem, {\n          data: data\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(CarsList, \"l4SjQourBHVLOPZP4NVpiKLLAkY=\");\n\n_c = CarsList;\nexport default _c2 = /*#__PURE__*/React.memo(CarsList);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CarsList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/volvo/volvo_cars/src/Components/CarsList/CarsList.tsx"],"names":["React","useEffect","useState","CarsData","Carousel","CarListItem","CarsList","data","setData","showDots","setShowDots","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","partialVisibilityGutter","mobile","layoutResize","window","innerWidth","addEventListener","removeEventListener","length","map","index","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CarsData from \"../../api/cars.json\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport CarListItem from \"../CarListItem/CarListItem\";\r\nimport { ICar } from \"../../interface/cars\";\r\n\r\nconst CarsList = () => {\r\n  const [data, setData] = useState<ICar[]>([]); // store data\r\n  const [showDots, setShowDots] = useState(false); // hide dots for large screen\r\n\r\n  useEffect(() => {\r\n    setData(CarsData);\r\n  }, []);\r\n\r\n  //responsive breakpoints for plugin\r\n  const responsive = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 4,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n      partialVisibilityGutter: 30,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1, // optional, default to 1.\r\n      partialVisibilityGutter: 30,\r\n    },\r\n  };\r\n\r\n  const layoutResize = () => {\r\n    // on window resize show dots only for small screen\r\n    if (window.innerWidth > 1024) setShowDots(false);\r\n    else setShowDots(true);\r\n  };\r\n  useEffect(() => {\r\n    layoutResize();\r\n    window.addEventListener(\"resize\", layoutResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", layoutResize);\r\n    };\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      {data && data.length > 0 && (\r\n        <Carousel\r\n          swipeable={true}\r\n          draggable={true}\r\n          showDots={showDots}\r\n          responsive={responsive}\r\n          ssr={true} // means to render carousel on server-side.\r\n          infinite={false}\r\n          keyBoardControl={true}\r\n          customTransition=\"transform 300ms ease-in-out\"\r\n          transitionDuration={1000}\r\n          containerClass=\"carousel-container\"\r\n          removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n          dotListClass=\"custom-dot-list-style\"\r\n          itemClass=\"carousel-item-padding-40-px\"\r\n          partialVisible={true}\r\n        >\r\n          {data.map((data: ICar, index: number) => {\r\n            return <CarListItem key={index} data={data} />;\r\n          })}\r\n        </Carousel>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default React.memo(CarsList);\r\n"]},"metadata":{},"sourceType":"module"}